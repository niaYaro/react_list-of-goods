{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","resetSorting","this","reorderedGoods","goods","visibleGoods","sort","product1","product2","localeCompare","length","getReorderedGoods","isSorted","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,eAAiB,kBACf,EAAKD,SAAS,CAAEH,SAAUL,EAASU,YAbvC,EAgBEC,aAAe,kBACb,EAAKH,SAAS,CAAEH,SAAUL,EAASY,UAjBvC,EAoBEC,aAAe,kBACb,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EA3DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAkBzB,OAhBAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQf,GACN,KAAKL,EAASU,SACZ,OAAOS,EAASE,cAAcD,GAEhC,KAAKpB,EAASY,OACZ,OAAOO,EAASG,OAASF,EAASE,OAEpC,QAAS,OAAO,MAIhBlB,GACFa,EAAaV,UAGRU,EAqCkBM,CAAkBtB,EAAiB,CACxDI,WAAUD,eAENoB,EAAWnB,IAAaL,EAASM,OAAuB,IAAfF,EAE/C,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYtB,IAAaL,EAASU,WAEpCkB,QAASd,KAAKL,eALhB,iCAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYtB,IAAaL,EAASY,SAEpCgB,QAASd,KAAKH,aALhB,4BAUA,wBACEe,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAA2B,IAAfvB,IAEdwB,QAASd,KAAKP,QALhB,qBAUEiB,GAEA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,aAHhB,sBAUJ,6BACGE,EAAec,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,gBAjFhC,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.04072c97.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((product1, product2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return product1.localeCompare(product2);\n\n      case SortType.LENGTH:\n        return product1.length - product2.length;\n\n      default: return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => (\n    this.setState({ sortType: SortType.ALPHABET })\n  );\n\n  sortByLength = () => (\n    this.setState({ sortType: SortType.LENGTH })\n  );\n\n  resetSorting = () => (\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    })\n  );\n\n  render(): React.ReactNode {\n    const { isReversed, sortType } = this.state;\n    const reorderedGoods = getReorderedGoods(goodsFromServer, {\n      sortType, isReversed,\n    });\n    const isSorted = sortType !== SortType.NONE || isReversed === true;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', {\n              'is-light': isReversed !== true,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          { isSorted\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetSorting}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {reorderedGoods.map(good => (\n            <li data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}